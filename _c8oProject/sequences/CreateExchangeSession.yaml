comment: |
  Creates a session with Exchange Server. If Using user and password Authentication, provide them in the variables. If using OAuth, this will automatically use the EWS OAuth Token available in the current user session.
  
  This sequence has to be called prior to any other sequences
  
↓Get_from_session [steps.SessionGetStep-1659955121604]: 
  key: EwsOAuthAccessToken
↓jSimpleSource [steps.SimpleSourceStep-1659955163821]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1659955121604
        - java.lang.String: 
          - ↑value: ./expression/text()
  variableName: OAuthAccesssToken
↓EWSLogin [steps.SimpleStep-1659854153585]: 
  expression: |
    'var EWSApi = JavaImporter(
    	Packages.microsoft.exchange.webservices.data.core.ExchangeService,
    	Packages.microsoft.exchange.webservices.data.credential.WebCredentials,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.misc.ExchangeVersion,
    	Packages.microsoft.exchange.webservices.data.core.service.item.EmailMessage,
    	Packages.microsoft.exchange.webservices.data.property.complex.MessageBody,
    	
    	Packages.java.net.URI
    );
    
    RedirectionUrlCallback = {
    	autodiscoverRedirectionUrlValidationCallback: function(redirectionUrl) {
    		log.warn(redirectionUrl);
    		return true;
    	}
    }
    
    TraceListener = {
    	trace: function(topic, data) {
    		log.warn(topic + ":" + data)
    	}
    }
    
    with (EWSApi) {
    	service = new ExchangeService(ExchangeVersion.Exchange2010_SP2);
    	service.setTraceEnabled(true);
    	service.setTraceListener(TraceListener);
    	
    	// This is to use as User / PAssword.. May work for On prem Installations
    	// Seems this is disabled for Office365.
    	
    	if (OAuthAccesssToken == undefined) {
    		log.warn("Using User / PAssword");
    		credentials = new WebCredentials(user, password);
    		service.setCredentials(credentials);
    	} else {
    		// We have an OAuth Token from a Previous OAUth Sequence Login. SO use it.
    		log.warn("Using OAuth. OAuth Token is : " + OAuthAccesssToken);
    		service.getHttpHeaders().put("Authorization", OAuthAccesssToken);
    	}
    	
    	// Uncomment to enable Autodiscovery.. Seems not to work with Office 365
    	// We will try it on a Real Exchange Instance
    	// service.autodiscoverUrl(user, RedirectionUrlCallback);
    	
    	// This is set to this value for Office365 exchange Online.. We will have to check
    	// ff Setting an other URL Works of On Prem Exchange Installations.
    	url = new URI("https://outlook.office365.com/EWS/Exchange.asmx")
    	service.setUrl(url);
    	
    	// Save service in Convertigo Session, so that any other sequece can retreive it
    	context.httpSession.setAttribute("EWSSession", service);
    	
    	
    }
    '
↓user [variables.RequestableVariable-1659854045975]: 
  comment: The user name as an email address for Exchange On prem installations
↓password [variables.RequestableVariable-1659854053150]: 
  comment: The user password for Exchange On Prem installations
↓OK [core.TestCase]: 
  ↓user [variables.TestCaseVariable-1659854067771]: 
    value: admin@qycf.onmicrosoft.com
  ↓password [variables.TestCaseVariable-1659854067773]: 
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xf5254abfffc0d4178afb9f473a13d698
    visibility: '-1'
↓OK1 [core.TestCase]: 
  ↓user [variables.TestCaseVariable-1659858126737]: 
    value: olivierp@convertigo.onmicrosoft.com
  ↓password [variables.TestCaseVariable-1659858126740]: 
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xf5254abfffc0d4178afb9f473a13d698
    visibility: '-1'