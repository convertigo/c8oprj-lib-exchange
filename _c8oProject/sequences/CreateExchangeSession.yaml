comment: |
  Creates a session with Exchange Server. If Using user and password Authentication, provide them in the variables. If using OAuth, this will automatically use the EWS OAuth Token available in the current user session.
  
  This sequence has to be called prior to any other sequences
  
↓Get_from_session [steps.SessionGetStep-1659955121604]: 
  key: EwsOAuthAccessToken
  output: false
↓jSimpleSource [steps.SimpleSourceStep-1659955163821]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1659955121604
        - java.lang.String: 
          - ↑value: ./expression/text()
  variableName: OAuthAccesssToken
↓EWSLogin [steps.SimpleStep-1659854153585]: 
  expression: |
    'var EWSApi = JavaImporter(
    	Packages.microsoft.exchange.webservices.data.core.ExchangeService,
    	Packages.microsoft.exchange.webservices.data.credential.WebCredentials,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.misc.ExchangeVersion,
    	Packages.microsoft.exchange.webservices.data.core.service.item.EmailMessage,
    	Packages.microsoft.exchange.webservices.data.property.complex.MessageBody,
    	
    	Packages.java.net.URI
    );
    
    RedirectionUrlCallback = {
    	autodiscoverRedirectionUrlValidationCallback: function(redirectionUrl) {
    		log.warn(redirectionUrl);
    		return true;
    	}
    }
    
    TraceListener = {
    	trace: function(topic, data) {
    		log.warn(topic + ":" + data)
    	}
    }
    
    with (EWSApi) {
    	error = null;
    	service = new ExchangeService(ExchangeVersion.Exchange2010_SP2);
    	service.setTraceEnabled(true);
    	service.setTraceListener(TraceListener);
    		
    	if (OAuthAccesssToken == undefined) {
    		// This is to use as User / Password.. May work for On prem Installations
    		// Seems this is disabled for Office365.
    		log.warn("No OAuthAcess Token is availale so Using User / Password");
    		if (!user || ! password) {
    			error = "Error, User and password must be provided if not using OAuth"
    			log.error(error);
    		} else {
    			url = new URI(EWSUrl)
    			credentials = new WebCredentials(user, password);
    			service.setCredentials(credentials);
    		}		
    	} else {
    		// We have an OAuth Token from a Previous OAUth Sequence Login. SO use it.
    		log.warn("Using OAuth. OAuth Token is : " + OAuthAccesssToken);
    		service.getHttpHeaders().put("Authorization", OAuthAccesssToken);
    		url = new URI("https://outlook.office365.com/EWS/Exchange.asmx")
    	}
    	
    	// Uncomment to enable Autodiscovery.. Seems not to work with Office 365
    	// We will try it on a Real Exchange Instance
    	// service.autodiscoverUrl(user, RedirectionUrlCallback);
    	
    	// This is set to this value for Office365 exchange Online.. We will have to check
    	// ff Setting an other URL Works of On Prem Exchange Installations.
    	service.setUrl(url);
    	
    	// Save service in Convertigo Session, so that any other sequence can retreive it
    	context.httpSession.setAttribute("EWSSession", service);
    }
    '
↓jIf [steps.IfStep-1660114586894]: 
  condition: error != null
  ↓Error_structure [steps.XMLErrorStep-1660114598990]: 
    message: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
        - SmartType: 
          - ↑mode: JS
          - →→: error
↓user [variables.RequestableVariable-1659854045975]: 
  comment: The user name as an email of a service account with Impersonation privileges for Exchange On prem installations. Optional as automatically provided by the symbol but can be overrided
  value: ${lib_exchange.ServiceAccount}
↓password [variables.RequestableVariable-1659854053150]: 
  comment: |
    The user password for Exchange On Prem installations. Optional as automatically provided by the symbol but can be overrided
    
  value: 
    - ↑ciphered: true
    - ↑traceable: false
    - →→: xdef9fd9ad3175a305d471f48abb2dd7799140de5ba4fd55664d59fd8d32378becaf576b9c980e9098cda18f212779e84
  visibility: '-1'
↓EWSUrl [variables.RequestableVariable-1660194805940]: 
  comment: |
    The EWS API Url. Optional as automatically provided by the Symbol. EWS API Urls are in the form:
    
    https://&lt;exchange server dns name&gt;/EWS/exchange.asmx
    
  value: ${lib_exchange.EWSUrl}