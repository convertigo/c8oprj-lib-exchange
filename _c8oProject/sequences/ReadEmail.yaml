comment: Returns a Given email details form its Id returned by ListInbox
↓EWSReadEmail [steps.SimpleStep-1660367005690]: 
  expression: |
    'var EWSApi = JavaImporter(
    	Packages.microsoft.exchange.webservices.data.core.ExchangeService,
    	Packages.microsoft.exchange.webservices.data.credential.WebCredentials,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.misc.ExchangeVersion,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.misc.ConnectingIdType,
    	Packages.microsoft.exchange.webservices.data.core.service.item.EmailMessage,
    	Packages.microsoft.exchange.webservices.data.property.complex.MessageBody,
    	Packages.microsoft.exchange.webservices.data.misc.ImpersonatedUserId,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.service.SendInvitationsMode,
    	Packages.microsoft.exchange.webservices.data.core.service.item.Appointment,
    	Packages.microsoft.exchange.webservices.data.property.complex.Attendee,
    	Packages.microsoft.exchange.webservices.data.search.FindItemsResults,
    	Packages.microsoft.exchange.webservices.data.search.ItemView,
    	Packages.microsoft.exchange.webservices.data.core.PropertySet,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.property.BasePropertySet,
    	Packages.microsoft.exchange.webservices.data.core.enumeration.property.WellKnownFolderName,
    	Packages.microsoft.exchange.webservices.data.property.complex.ItemId,
    
    	Packages.java.net.URI,
    );
    
    TraceListener = {
    	trace: function(topic, data) {
    		log.warn(topic + ":" + data)
    	}
    }
    
    function getJsArray(javaList) {
    	let jsArray  = [];
    	let javaArray =javaList.getItems().toArray()
    	for	(let i=0; i < javaArray.length; i++) {
    		jsArray.push(javaArray[i]);
    	}
    	return jsArray;
    }
    
    with (EWSApi) {
    	error = null;
    	service = context.httpSession.getAttribute("EWSSession");
    	log.debug("EWS Service = " + service);
    	
    	if (service != null) { 
    		service.setTraceEnabled(true);
    		service.setTraceListener(TraceListener);
    		if (CurrentUser) {
    			service.setImpersonatedUserId(new ImpersonatedUserId(ConnectingIdType.SmtpAddress, CurrentUser));
    			propertySet = new PropertySet(BasePropertySet.FirstClassProperties);
    		    try {
    		            emailMsg = EmailMessage.bind(service, new ItemId(Id), propertySet);
       					msg = {
    						Id: emailMsg.getId(),
    						Subject : emailMsg.getSubject(),
    						From: emailMsg.getFrom(),
    						To: getJsArray(emailMsg.getToRecipients()),
    						Cc: getJsArray(emailMsg.getCcRecipients()),
    						Bcc: getJsArray(emailMsg.getBccRecipients()),
    						DateReceived: new Date(emailMsg.getDateTimeReceived().getTime()).toISOString(),
    						Body: emailMsg.getBody()
    					};
    			} 
    		    catch (e)  {
    				log.error(e);
    				error = ""+e                
    		    }
    		} else {
    			error = "Current User is not defined and is mandatory"	
    		}		
    	} else {
    		error = "EWS Connector : The EWS Session has not been established . Call The CreateExchangeSession Sequence first"
    	}
    }	
    '
↓jIfThenElse [steps.IfThenElseStep-1660367005693]: 
  condition: error != null
  ↓jThen [steps.ThenStep-1660367005696]: 
    ↓Error_structure [steps.XMLErrorStep-1660367005699]: 
      message: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
          - SmartType: 
            - ↑mode: JS
            - →→: error
  ↓jElse [steps.ElseStep-1660367005702]: 
    ↓JSON_to_XML [steps.JsonToXmlStep-1660367005705]: 
      jsonObject: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
          - SmartType: 
            - ↑mode: JS
            - →→: msg
      key: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
          - SmartType: 
            - ↑mode: PLAIN
            - →→: mail
↓CurrentUser [variables.RequestableVariable-1660367005708]: 
  comment: The user inbox as an email address
↓Id [variables.RequestableVariable-1660367005711]: 
  comment: The mail Id as returned by ListInbox
↓TestOK [core.TestCase]: 
  ↓CurrentUser [variables.TestCaseVariable-1660367005715]: 
    value: administrateur@exchange.convertigo.com
  ↓Id [variables.TestCaseVariable-1660369215849]: 
    value: AAMkADAxYjMxYTk3LWE5NGQtNDA3Ni1iYTNiLWExODg0YzkzMTIzZABGAAAAAADbRduwOdBhQ4LxmhC8Ph96BwAdA6j3k3FeSLMAZsa0fhN/AAAAAAEMAAAdA6j3k3FeSLMAZsa0fhN/AAABLGtmAAA=